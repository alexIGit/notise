====
==== Progressive Enhancement (прогрессивное улучшение) — 
 Изначально продукт разрабатывается исходя из выполнения в ограниченной среде, 
 а затем функционал постепенно наращивается по мере доступности компонентов.

 Прогрессивное улучшение предполагает, что веб-интерфейсы должны создаваться поэтапно, циклически,
 от простого к сложному. 
 На каждом из этапов должен получаться законченный веб-интерфейс, 
 который будет лучше, красивее и удобнее предыдущего

	Изящная деградация (graceful degradation) — 
 подход в разработке сайтов, при котором некоторые свойства или элементы дизайна
 заменяются на аналогичные в  старых версиях браузеров, которые не поддерживают все современные возможности.
 При этом деградация не должна наносить ущерб потреблению контента или эстетическому впечатлению от сайта.
 ` от современных браузеров деградация к старым `

	feature detection
  технологии определения возможностей браузера

====
==== Семантическая вёрстка — 
 это подход к созданию веб-страниц на языке HTML,
 основанный на использовании HTML-тегов в соответствии с их семантикой (предназначением),
 а также предполагающий логичную и последовательную иерархию страницы
====
==== Оптимизация
 	Уменьшите количество HTTP-запросов
 	Помещайте CSS файлы в начале страницы
 	Помещайте javascript в конец страницы
 	Минимизируйте css и javascript
	Используйте поддомены для параллельного скачивания
 Как я уже говорил Выше, согласно спецификации HTTP/1.1 на браузеры накладываются ограничения на количество одновременно загружаемых компонентов сайта, а именно не более 2-х компонентов с одного хоста. Поэтому если на Вашем сайте много графики, то ее лучше вынести на отдельный поддомен или поддомены. Для Вас это будет один и тот же сервер, а для браузера – разные. Чем больше поддоменов Вы создадите, тем больше файлов браузер сможет одновременно загрузить и тем быстрее загрузится вся страница сайта. Вам остается лишь изменить адрес картинок на новый. Очень простой, но действенный способ.
	Используйте кэш браузера
	Используйте CDN для загрузки популярных JavaScript библиоте.	
	Оптимизируйте ваши изображения
	Не масштабируйте изображения
 Чем меньший вес картинки, тем меньше времени потребуется для её загрузки.
	Используйте Gzip- сжатие


